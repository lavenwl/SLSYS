<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.sl</groupId>
  <artifactId>slsys</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>slsys Maven Webapp</name>
  <description>JavaEE application skeleton based on struts2(2.5) spring(4.3.1) and hibernate(4.3.11.Final)</description>
  <properties>
    <spring-version>4.3.1.RELEASE</spring-version>
    <!-- Using utf-8 encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <!-- JDK setting-->
    <maven.compiler.target>1.7</maven.compiler.target>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.testTarget>1.7</maven.compiler.testTarget>
    <maven.compiler.testSource>1.7</maven.compiler.testSource>
  </properties>
  
  <dependencies>
  	<!-- Mysql Connector start -->
	<dependency>
	  <groupId>mysql</groupId>
	  <artifactId>mysql-connector-java</artifactId>
	  <version>5.1.38</version>
	</dependency>
    <!-- Mysql Connector stop -->
    
  	<!-- Data Source start -->
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>2.4.7</version>
    </dependency>
    <!-- Data Source stop -->
    
    <!-- struts framework start -->
	<dependency>
	  <groupId>org.apache.struts</groupId>
	  <artifactId>struts2-core</artifactId>
	  <version>2.5</version>
	  <!-- struts核心包，Struts框架的外围 -->
	</dependency>
	<dependency>
	  <groupId>org.apache.struts.xwork</groupId>
	  <artifactId>xwork-core</artifactId>
	  <version>2.3.30</version>
	  <!-- struts核心包，WebWork内核 -->
	</dependency>
	<dependency>
	  <groupId>javax.servlet</groupId>
	  <artifactId>jstl</artifactId>
	  <version>1.2</version>
	  <!-- jsp标准标签 包含了standard.jar-->
	</dependency>
	<dependency>
	  <groupId>ognl</groupId>
	  <artifactId>ognl</artifactId>
	  <version>3.1.10</version>
	  <!-- 支持ognl表达式 -->
	</dependency>
	<dependency>
	  <groupId>taglibs</groupId>
	  <artifactId>standard</artifactId>
	  <version>1.1.2</version>
	  <!-- jsp标准标签 已经包含于jstl.jar放置于此只为标记-->
	</dependency>
    <!-- struts framework stop -->
    
    <!-- springframework start -->
    <dependency>
	  <groupId>org.aspectj</groupId>
	  <artifactId>aspectjrt</artifactId>
	  <version>1.8.9</version>
	  <!-- spring AOP功能依赖的包 -->
	</dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.8.9</version>
      <scope>runtime</scope>
      <!-- spring AOP功能依赖的包 -->
    </dependency>
    <dependency>
	  <groupId>cglib</groupId>
	  <artifactId>cglib-nodep</artifactId>
	  <version>2.2</version>
	  <!-- 动态代理需要的包 使用nodep包不需要关联asm的jar包,jar包内部包含asm的类-->
	</dependency>
	<dependency>
	  <groupId>cglib</groupId>
	  <artifactId>cglib</artifactId>
	  <version>2.2.2</version>
	  <!-- 动态代理需要的包 使用此jar包需要关联asm的jar包,否则运行时报错-->
	</dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring-version}</version>
      <!-- spring上下文相关包 -->
    </dependency>
    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
      <version>1.0</version>
      <scope>runtime</scope>
      <!-- 这个包是AOP联盟的API包,里面包含了针对面向切面的接口 -->
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring-version}</version>
      <!-- spring核心包 -->
    </dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-web</artifactId>
	  <version>${spring-version}</version>
	  <!-- spring用于web开发时的功能及辅助工具类 -->
	</dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <scope>runtime</scope>
      <version>1.2</version>
      <!-- spring 日志记录包 -->
    </dependency>
    <!-- springframework stop -->
    
    <!-- struts spring plugin start -->
	<dependency>
	  <groupId>org.apache.struts</groupId>
	  <artifactId>struts2-spring-plugin</artifactId>
	  <version>2.3.16.3</version>
	  <!-- spring接管struts的action组件的创建及属性的自动依赖注入 -->
	</dependency>
	<!-- struts spring plugin end -->
    
    <!-- Hibernate start-->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>4.3.11.Final</version>
      <!-- hibernate核心包 -->
    </dependency>
    <dependency>
      <groupId>dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <version>1.6.1</version>
      <scope>runtime</scope>
      <!-- Java的XML API，用来读写XML文件 -->
    </dependency>
     <dependency>
      <groupId>org.hibernate.common</groupId>
      <artifactId>hibernate-commons-annotations</artifactId>
      <version>4.0.5.Final</version>
      <!-- hibernate注解功能依赖包 -->
    </dependency> 
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>3.20.0-GA</version>
      <scope>runtime</scope>
      <!-- 代码生成工具, Hibernate用它在运行时扩展 Java类和实现 -->
    </dependency>
    <!-- Hibernate stop-->
    
    <!-- spring-hibernate-plugin start -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <scope>compile</scope>
      <version>${spring-version}</version>
      <!-- spring对持久层的支持 -->
    </dependency>
    <!-- spring-hibernate-plugin end -->
    
	<!-- Logging start -->
	<dependency>
	  <groupId>log4j</groupId>
	  <artifactId>log4j</artifactId>
	  <version>1.2.17</version>
	  <scope>runtime</scope>
	  <!-- log4j日志核心包 -->
	</dependency>
	<dependency>
	  <artifactId>slf4j-api</artifactId>
	  <groupId>org.slf4j</groupId>
	  <version>1.7.5</version>
	  <!-- slf4j日志接口包 -->
	</dependency>
	<dependency>
	  <groupId>org.slf4j</groupId>
	  <artifactId>slf4j-log4j12</artifactId>
	  <version>1.7.5</version>
	  <scope>runtime</scope>
	  <!-- 把slf4j的接口转换成适合log4j的接口的一个适配器 -->
	</dependency>
	<!-- Log4j stop -->
	
	<!-- JAVAEE capacity start -->
	<dependency>
	  <groupId>javax.servlet</groupId>
	  <artifactId>javax.servlet-api</artifactId>
	  <version>3.1.0</version>
	  <scope>provided</scope>
	</dependency>
	<!-- JAVAEE capacity stop -->
	
    <!-- Unit Test start -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
      <!-- 测试核心包 -->
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>1.3</version>
      <scope>test</scope>
      <!-- Hamcest提供了一套匹配符Matcher,这些匹配符更接近自然语言,可读性高,更加灵活 -->
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring-version}</version>
      <scope>test</scope>
      <!-- 对Junit等测试框架的简单封装 -->
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.10.19</version>
      <!-- 是一个基于MIT协议的开源java测试框架 -->
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-mock</artifactId>
      <version>2.0.8</version>
    </dependency>
    <!-- Unit Test stop -->
    
    <!-- Apache start -->
	<dependency>
	  <groupId>commons-io</groupId>
	  <artifactId>commons-io</artifactId>
	  <version>2.5</version>
	  <!-- 输入输出工具包 -->
	</dependency>
	<dependency>
	  <groupId>org.apache.commons</groupId>
	  <artifactId>commons-lang3</artifactId>
	  <version>3.4</version>
	  <!-- 对java.lang的扩展包 -->
	</dependency>
	<!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
	<dependency>
	    <groupId>commons-beanutils</groupId>
	    <artifactId>commons-beanutils</artifactId>
	    <version>1.8.3</version>
	</dependency>
	<dependency>
	  <groupId>commons-codec</groupId>
	  <artifactId>commons-codec</artifactId>
	  <version>1.10</version>
	  <!-- 这个工具是用来编码和解码的，包括Base64，URL，Soundx等等 -->
	</dependency>
	<dependency>
	  <groupId>commons-fileupload</groupId>
	  <artifactId>commons-fileupload</artifactId>
	  <version>1.3.2</version>
	  <!-- 文件上传工具包 -->
	</dependency>
	<!-- Apache stop -->
	
	<!-- alibaba fastjson start -->
	<!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
	<dependency>
	    <groupId>com.alibaba</groupId>
	    <artifactId>fastjson</artifactId>
	    <version>1.2.23</version>
	</dependency>
	<!-- alibaba fastjson end -->
  </dependencies>

  <build>
	<pluginManagement>
	  <plugins>
	    <plugin>
	      <groupId>org.apache.maven.plugins</groupId>
	      <artifactId>maven-compiler-plugin</artifactId>
	      <version>3.5.1</version>
	      <configuration>
	        <source>${maven.compiler.source}</source>
	        <target>${maven.compiler.target}</target>
	        <compilerArgs>
	          <!--<arg>-verbose</arg>
	          <arg>-Xlint:all,-options,-path</arg>-->
	       </compilerArgs>
	       <showDeprecation>true</showDeprecation>
	       <showWarnings>true</showWarnings>
	       <debug>true</debug>
	       <optimize>true</optimize>
	     </configuration>
	     <!-- 自动以编译源码参数 -->
	   </plugin>
	   <plugin>
	     <groupId>org.apache.maven.plugins</groupId>
	     <artifactId>maven-war-plugin</artifactId>
	     <version>2.6</version>
	     <configuration>
	       <failOnMissingWebXml>false</failOnMissingWebXml>
	     </configuration>
	     <!-- maven对项目进行动态打包 -->
	   </plugin>
	   
	   <plugin> 
			<groupId>org.apache.tomcat.maven</groupId> 
			<artifactId>tomcat6-maven-plugin</artifactId> 
			<version>2.2</version> 
			<configuration> 
			<url>http://localhost:8080/manager</url> <!-- tomcat管理路径 -->
			<server>Tomcat6</server> <!-- 与settings.xml文件中Server的id相同 -->
			<path>/slsys</path> <!-- 应用的部署位置 -->
			</configuration> 
	    </plugin>
	   
	    <plugin>
	      <groupId>org.apache.maven.plugins</groupId>
	      <artifactId>maven-surefire-plugin</artifactId>
	      <version>2.19.1</version>
	      <configuration>
	        <excludes>
	          <exclude>**/*IntegrationTest.java</exclude>
	        </excludes>
	      </configuration>
	      <!-- maven单元测试自动化包 -->
	    </plugin>
	    <plugin>
	      <groupId>org.apache.maven.plugins</groupId>
	      <artifactId>maven-failsafe-plugin</artifactId>
	      <version>2.19.1</version>
	      <configuration>
	        <includes>
	          <include>**/*IntegrationTest.java</include>
	        </includes>
	      </configuration>
	      <executions>
	        <execution>
	          <goals>
	            <goal>integration-test</goal>
	            <goal>verify</goal>
	          </goals>
	        </execution>
	      </executions>
	      <!-- maven集成测试自动化包 -->
	    </plugin>
	  </plugins>
	</pluginManagement>
    <finalName>slsys</finalName>
  </build>
</project>
